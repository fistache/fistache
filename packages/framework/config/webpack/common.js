const path = require('path')

module.exports = config => {
  config
    // .cache(true)
    .entry('index')
      // don't forget to add resolve paths
      .add(path.resolve(__dirname, '../../packages/component/index.ts'))
      .end()
    .output
      .path(path.resolve(__dirname, '../../packages/component/dist'))
      .filename('[name].js')
      .publicPath('/')

  config.resolve
    .extensions
      .merge(['.ts', '.seafood', '.js', '.json'])
      .end()
    .modules
      .add('node_modules')
      .add(path.resolve(__dirname, '../../packages/component/node_modules'))
      .add(path.resolve(__dirname, '../../node_modules'))
      .end()

  config.resolveLoader
    .modules
      .add('node_modules')
      .add(path.resolve(__dirname, '../../packages/component/node_modules'))
      .add(path.resolve(__dirname, '../../node_modules'))

  config.module
    .rule('seafood')
      .test(/\.seafood$/)
      .use('seafood-loader')
        .loader('seafood-loader')
        .end()

  config.module
    .rule('typescript')
      .test(/\.ts$/)
      // .exclude
      //   .add(path.resolve('node_modules'))
      //   .end()
      // .use('cache-loader')
      //   .loader('cache-loader')
      //   .end()
      .use('ts-loader')
        .loader('ts-loader')
        .options({
          // Declaration files aren't generated by the Typescript compiler in this mode
          // transpileOnly: true
        })
        .end()
      .use('babel-loader')
        .loader('babel-loader')
        .end()

  config
    .plugin('progress')
      .use(require('simple-progress-webpack-plugin'))
}
